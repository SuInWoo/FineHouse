{"ast":null,"code":"import { mapState, mapActions, mapMutations } from \"vuex\";\nconst mapStore = \"mapStore\";\nexport default {\n  name: \"HouseList\",\n  data() {\n    return {\n      hs: [],\n      detail: {\n        보증금: 0,\n        월세: 0,\n        건물명: \"\",\n        법정동: \"\",\n        지번: \"\",\n        층: \"\",\n        전용면적: \"\",\n        이미지: \"\"\n      },\n      randnum: []\n    };\n  },\n  computed: {\n    ...mapState(mapStore, [\"sidos\", \"guguns\", \"dongs\", \"houses\", \"house\"])\n  },\n  methods: {\n    ...mapActions(mapStore, [\"setHouseDetail\"]),\n    ...mapMutations(mapStore, [\"SET_DETAIL_HOUSE\"]),\n    goDetail(h, imgnum) {\n      this.$emit(\"changeToggle1\", false);\n      this.detail.보증금 = h.보증금액;\n      this.detail.월세 = h.월세금액;\n      this.detail.건물명 = h.연립다세대;\n      this.detail.법정동 = h.법정동;\n      this.detail.지번 = h.지번;\n      this.detail.층 = h.층;\n      this.detail.전용면적 = h.전용면적;\n      if (isNaN(imgnum)) this.detail.이미지 = 0;else this.detail.이미지 = imgnum;\n      this.setHouseDetail(this.detail);\n    },\n    moveCenter(index) {\n      let sidoname = \"\";\n      // 지역 코드 찾는 for문\n      for (let i = 0; i < 18; i++) {\n        if (String(this.hs[index].지역코드).substr(0, 2) == this.sidos[i].value) {\n          sidoname = this.sidos[i].text;\n          break;\n        }\n      }\n      let addr = sidoname + \" \" + this.hs[index].법정동 + \" \" + this.hs[index].지번;\n      console.log(\"선택된 주소\", addr);\n      this.$emit(\"addr\", addr);\n      this.$emit(\"flag\", true);\n    },\n    moveCenterOnly(index) {\n      let sidoname = \"\";\n      // 지역 코드 찾는 for문\n      for (let i = 0; i < 18; i++) {\n        if (String(this.hs[index].지역코드).substr(0, 2) == this.sidos[i].value) {\n          sidoname = this.sidos[i].text;\n          break;\n        }\n      }\n      let addr = sidoname + \" \" + this.hs[index].법정동 + \" \" + this.hs[index].지번;\n      console.log(\"선택된 주소\", addr);\n      this.$emit(\"addr\", addr);\n      this.$emit(\"flag\", false);\n    }\n  },\n  watch: {\n    houses() {\n      this.hs = this.houses;\n      // console.log(\"hs\", this.hs);\n      for (var i = 0; i < this.houses.length; i++) {\n        this.randnum[i] = Math.floor(Math.random() * 20) + 1;\n        console.log(this.randnum[i]);\n      }\n    },\n    house() {\n      this.detail = this.house;\n    }\n  }\n};","map":{"version":3,"names":["mapState","mapActions","mapMutations","mapStore","name","data","hs","detail","보증금","월세","건물명","법정동","지번","층","전용면적","이미지","randnum","computed","methods","goDetail","h","imgnum","$emit","보증금액","월세금액","연립다세대","isNaN","setHouseDetail","moveCenter","index","sidoname","i","String","지역코드","substr","sidos","value","text","addr","console","log","moveCenterOnly","watch","houses","length","Math","floor","random","house"],"sources":["src/components/map/HouseList.vue"],"sourcesContent":["<template>\n  <div class=\"mt-4\">\n    <!-- :img-src=\"require('@/assets/' + ((index + 1) % 20) + '.jpg')\" -->\n    <b-card\n      :img-src=\"require('@/assets/' + randnum[index] + '.jpg')\"\n      img-left\n      class=\"mb-3\"\n      v-model=\"hs\"\n      v-for=\"(h, index) in hs\"\n      :key=\"index\"\n      @click=\"moveCenter(randnum[index])\"\n    >\n      <b-card-text>\n        <h4 v-if=\"h.월세금액 == 0\">\n          전세 <br />\n          {{ h.보증금액 }}만원\n        </h4>\n        <h4 v-else>\n          월세 <br />\n          {{ h.보증금액 }}만원/{{ h.월세금액 }}만원\n        </h4>\n        <b-list-group-item>{{ h.연립다세대 }}</b-list-group-item>\n        <b-list-group-item>{{ h.법정동 }}-{{ h.지번 }} {{ h.층 }}층</b-list-group-item>\n        <b-list-group-item>{{ h.전용면적 }}㎡</b-list-group-item>\n        <b-list-group-item\n          ><button @click=\"[goDetail(h, (index + 1) % 20), moveCenterOnly(index)]\">\n            상세보기\n          </button></b-list-group-item\n        >\n      </b-card-text>\n    </b-card>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapActions, mapMutations } from \"vuex\";\n\nconst mapStore = \"mapStore\";\n\nexport default {\n  name: \"HouseList\",\n  data() {\n    return {\n      hs: [],\n      detail: {\n        보증금: 0,\n        월세: 0,\n        건물명: \"\",\n        법정동: \"\",\n        지번: \"\",\n        층: \"\",\n        전용면적: \"\",\n        이미지: \"\",\n      },\n      randnum: [],\n    };\n  },\n  computed: {\n    ...mapState(mapStore, [\"sidos\", \"guguns\", \"dongs\", \"houses\", \"house\"]),\n  },\n  methods: {\n    ...mapActions(mapStore, [\"setHouseDetail\"]),\n    ...mapMutations(mapStore, [\"SET_DETAIL_HOUSE\"]),\n    goDetail(h, imgnum) {\n      this.$emit(\"changeToggle1\", false);\n      this.detail.보증금 = h.보증금액;\n      this.detail.월세 = h.월세금액;\n      this.detail.건물명 = h.연립다세대;\n      this.detail.법정동 = h.법정동;\n      this.detail.지번 = h.지번;\n      this.detail.층 = h.층;\n      this.detail.전용면적 = h.전용면적;\n      if (isNaN(imgnum)) this.detail.이미지 = 0;\n      else this.detail.이미지 = imgnum;\n      this.setHouseDetail(this.detail);\n    },\n    moveCenter(index) {\n      let sidoname = \"\";\n      // 지역 코드 찾는 for문\n      for (let i = 0; i < 18; i++) {\n        if (String(this.hs[index].지역코드).substr(0, 2) == this.sidos[i].value) {\n          sidoname = this.sidos[i].text;\n          break;\n        }\n      }\n      let addr = sidoname + \" \" + this.hs[index].법정동 + \" \" + this.hs[index].지번;\n      console.log(\"선택된 주소\", addr);\n      this.$emit(\"addr\", addr);\n      this.$emit(\"flag\", true);\n    },\n    moveCenterOnly(index) {\n      let sidoname = \"\";\n      // 지역 코드 찾는 for문\n      for (let i = 0; i < 18; i++) {\n        if (String(this.hs[index].지역코드).substr(0, 2) == this.sidos[i].value) {\n          sidoname = this.sidos[i].text;\n          break;\n        }\n      }\n      let addr = sidoname + \" \" + this.hs[index].법정동 + \" \" + this.hs[index].지번;\n      console.log(\"선택된 주소\", addr);\n      this.$emit(\"addr\", addr);\n      this.$emit(\"flag\", false);\n    },\n  },\n  watch: {\n    houses() {\n      this.hs = this.houses;\n      // console.log(\"hs\", this.hs);\n      for (var i = 0; i < this.houses.length; i++) {\n        this.randnum[i] = Math.floor(Math.random() * 20) + 1;\n        console.log(this.randnum[i]);\n      }\n    },\n    house() {\n      this.detail = this.house;\n    },\n  },\n};\n</script>\n\n<style scoped></style>\n"],"mappings":"AAmCA,SAAAA,QAAA,EAAAC,UAAA,EAAAC,YAAA;AAEA,MAAAC,QAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,EAAA;MACAC,MAAA;QACAC,GAAA;QACAC,EAAA;QACAC,GAAA;QACAC,GAAA;QACAC,EAAA;QACAC,CAAA;QACAC,IAAA;QACAC,GAAA;MACA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACA,GAAAjB,QAAA,CAAAG,QAAA;EACA;EACAe,OAAA;IACA,GAAAjB,UAAA,CAAAE,QAAA;IACA,GAAAD,YAAA,CAAAC,QAAA;IACAgB,SAAAC,CAAA,EAAAC,MAAA;MACA,KAAAC,KAAA;MACA,KAAAf,MAAA,CAAAC,GAAA,GAAAY,CAAA,CAAAG,IAAA;MACA,KAAAhB,MAAA,CAAAE,EAAA,GAAAW,CAAA,CAAAI,IAAA;MACA,KAAAjB,MAAA,CAAAG,GAAA,GAAAU,CAAA,CAAAK,KAAA;MACA,KAAAlB,MAAA,CAAAI,GAAA,GAAAS,CAAA,CAAAT,GAAA;MACA,KAAAJ,MAAA,CAAAK,EAAA,GAAAQ,CAAA,CAAAR,EAAA;MACA,KAAAL,MAAA,CAAAM,CAAA,GAAAO,CAAA,CAAAP,CAAA;MACA,KAAAN,MAAA,CAAAO,IAAA,GAAAM,CAAA,CAAAN,IAAA;MACA,IAAAY,KAAA,CAAAL,MAAA,QAAAd,MAAA,CAAAQ,GAAA,UACA,KAAAR,MAAA,CAAAQ,GAAA,GAAAM,MAAA;MACA,KAAAM,cAAA,MAAApB,MAAA;IACA;IACAqB,WAAAC,KAAA;MACA,IAAAC,QAAA;MACA;MACA,SAAAC,CAAA,MAAAA,CAAA,OAAAA,CAAA;QACA,IAAAC,MAAA,MAAA1B,EAAA,CAAAuB,KAAA,EAAAI,IAAA,EAAAC,MAAA,eAAAC,KAAA,CAAAJ,CAAA,EAAAK,KAAA;UACAN,QAAA,QAAAK,KAAA,CAAAJ,CAAA,EAAAM,IAAA;UACA;QACA;MACA;MACA,IAAAC,IAAA,GAAAR,QAAA,cAAAxB,EAAA,CAAAuB,KAAA,EAAAlB,GAAA,cAAAL,EAAA,CAAAuB,KAAA,EAAAjB,EAAA;MACA2B,OAAA,CAAAC,GAAA,WAAAF,IAAA;MACA,KAAAhB,KAAA,SAAAgB,IAAA;MACA,KAAAhB,KAAA;IACA;IACAmB,eAAAZ,KAAA;MACA,IAAAC,QAAA;MACA;MACA,SAAAC,CAAA,MAAAA,CAAA,OAAAA,CAAA;QACA,IAAAC,MAAA,MAAA1B,EAAA,CAAAuB,KAAA,EAAAI,IAAA,EAAAC,MAAA,eAAAC,KAAA,CAAAJ,CAAA,EAAAK,KAAA;UACAN,QAAA,QAAAK,KAAA,CAAAJ,CAAA,EAAAM,IAAA;UACA;QACA;MACA;MACA,IAAAC,IAAA,GAAAR,QAAA,cAAAxB,EAAA,CAAAuB,KAAA,EAAAlB,GAAA,cAAAL,EAAA,CAAAuB,KAAA,EAAAjB,EAAA;MACA2B,OAAA,CAAAC,GAAA,WAAAF,IAAA;MACA,KAAAhB,KAAA,SAAAgB,IAAA;MACA,KAAAhB,KAAA;IACA;EACA;EACAoB,KAAA;IACAC,OAAA;MACA,KAAArC,EAAA,QAAAqC,MAAA;MACA;MACA,SAAAZ,CAAA,MAAAA,CAAA,QAAAY,MAAA,CAAAC,MAAA,EAAAb,CAAA;QACA,KAAAf,OAAA,CAAAe,CAAA,IAAAc,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAE,MAAA;QACAR,OAAA,CAAAC,GAAA,MAAAxB,OAAA,CAAAe,CAAA;MACA;IACA;IACAiB,MAAA;MACA,KAAAzC,MAAA,QAAAyC,KAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}