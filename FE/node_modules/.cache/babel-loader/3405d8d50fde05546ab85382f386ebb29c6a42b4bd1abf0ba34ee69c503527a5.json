{"ast":null,"code":"import jwt_decode from \"jwt-decode\";\nimport { login } from \"@/api/member.js\";\nimport { findById } from \"@/api/member\";\nconst memberStore = {\n  namespaced: true,\n  state: {\n    isLogin: false,\n    isLoginError: false,\n    userInfo: null\n  },\n  getters: {\n    checkUserInfo: function (state) {\n      return state.userInfo;\n    }\n  },\n  mutations: {\n    SET_IS_LOGIN: (state, isLogin) => {\n      console.log(\"good\");\n      state.isLogin = isLogin;\n    },\n    SET_IS_LOGIN_ERROR: (state, isLoginError) => {\n      //console.log(\"error\");\n      state.isLoginError = isLoginError;\n    },\n    SET_USER_INFO: (state, userInfo) => {\n      console.log(userInfo);\n      state.isLogin = true;\n      state.userInfo = userInfo;\n    }\n  },\n  actions: {\n    async userConfirm({\n      commit\n    }, user) {\n      console.log(user);\n      await login(user, response => {\n        console.log(response.data.message);\n        if (response.data.message === \"success\") {\n          let token = response.data[\"access-token\"];\n          console.log(token);\n          commit(\"SET_IS_LOGIN\", true);\n          commit(\"SET_IS_LOGIN_ERROR\", false);\n          sessionStorage.setItem(\"access-token\", token);\n        } else {\n          console.log(\"실패\");\n          commit(\"SET_IS_LOGIN\", false);\n          commit(\"SET_IS_LOGIN_ERROR\", true);\n        }\n      }, () => {});\n    },\n    getUserInfo({\n      commit\n    }, token) {\n      console.log(\"토큰:\" + token);\n      let decode_token = jwt_decode(token);\n      console.log(decode_token);\n      findById(decode_token.userId, response => {\n        if (response.data.message === \"success\") {\n          commit(\"SET_USER_INFO\", response.data.userInfo);\n          console.log(response.data);\n        } else {\n          console.log(\"유저 정보 없음!!\");\n        }\n      }, error => {\n        console.log(error);\n      });\n    }\n  }\n};\nexport default memberStore;","map":{"version":3,"names":["jwt_decode","login","findById","memberStore","namespaced","state","isLogin","isLoginError","userInfo","getters","checkUserInfo","mutations","SET_IS_LOGIN","console","log","SET_IS_LOGIN_ERROR","SET_USER_INFO","actions","userConfirm","commit","user","response","data","message","token","sessionStorage","setItem","getUserInfo","decode_token","userId","error"],"sources":["/Users/suin/Desktop/pjt_final_01_team/pjt_daejeon_9th_class5_final_team12/src/store/modules/memberStore.js"],"sourcesContent":["import jwt_decode from \"jwt-decode\";\nimport { login } from \"@/api/member.js\";\nimport { findById } from \"@/api/member\";\n\nconst memberStore = {\n  namespaced: true,\n  state: {\n    isLogin: false,\n    isLoginError: false,\n    userInfo: null,\n  },\n  getters: {\n    checkUserInfo: function (state) {\n      return state.userInfo;\n    },\n  },\n  mutations: {\n    SET_IS_LOGIN: (state, isLogin) => {\n      console.log(\"good\");\n      state.isLogin = isLogin;\n    },\n    SET_IS_LOGIN_ERROR: (state, isLoginError) => {\n      //console.log(\"error\");\n      state.isLoginError = isLoginError;\n    },\n    SET_USER_INFO: (state, userInfo) => {\n      console.log(userInfo);\n      state.isLogin = true;\n      state.userInfo = userInfo;\n    },\n  },\n  actions: {\n    async userConfirm({ commit }, user) {\n      console.log(user);\n\n      await login(\n        user,\n        (response) => {\n          console.log(response.data.message);\n          if (response.data.message === \"success\") {\n            let token = response.data[\"access-token\"];\n            console.log(token);\n            commit(\"SET_IS_LOGIN\", true);\n            commit(\"SET_IS_LOGIN_ERROR\", false);\n            sessionStorage.setItem(\"access-token\", token);\n          } else {\n            console.log(\"실패\");\n            commit(\"SET_IS_LOGIN\", false);\n            commit(\"SET_IS_LOGIN_ERROR\", true);\n          }\n        },\n        () => {}\n      );\n    },\n    getUserInfo({ commit }, token) {\n      console.log(\"토큰:\" + token);\n\n      let decode_token = jwt_decode(token);\n      console.log(decode_token);\n      findById(\n        decode_token.userId,\n        (response) => {\n          if (response.data.message === \"success\") {\n            commit(\"SET_USER_INFO\", response.data.userInfo);\n            console.log(response.data);\n          } else {\n            console.log(\"유저 정보 없음!!\");\n          }\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n    },\n  },\n};\n\nexport default memberStore;\n"],"mappings":"AAAA,OAAOA,UAAU,MAAM,YAAY;AACnC,SAASC,KAAK,QAAQ,iBAAiB;AACvC,SAASC,QAAQ,QAAQ,cAAc;AAEvC,MAAMC,WAAW,GAAG;EAClBC,UAAU,EAAE,IAAI;EAChBC,KAAK,EAAE;IACLC,OAAO,EAAE,KAAK;IACdC,YAAY,EAAE,KAAK;IACnBC,QAAQ,EAAE;EACZ,CAAC;EACDC,OAAO,EAAE;IACPC,aAAa,EAAE,SAAAA,CAAUL,KAAK,EAAE;MAC9B,OAAOA,KAAK,CAACG,QAAQ;IACvB;EACF,CAAC;EACDG,SAAS,EAAE;IACTC,YAAY,EAAEA,CAACP,KAAK,EAAEC,OAAO,KAAK;MAChCO,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACnBT,KAAK,CAACC,OAAO,GAAGA,OAAO;IACzB,CAAC;IACDS,kBAAkB,EAAEA,CAACV,KAAK,EAAEE,YAAY,KAAK;MAC3C;MACAF,KAAK,CAACE,YAAY,GAAGA,YAAY;IACnC,CAAC;IACDS,aAAa,EAAEA,CAACX,KAAK,EAAEG,QAAQ,KAAK;MAClCK,OAAO,CAACC,GAAG,CAACN,QAAQ,CAAC;MACrBH,KAAK,CAACC,OAAO,GAAG,IAAI;MACpBD,KAAK,CAACG,QAAQ,GAAGA,QAAQ;IAC3B;EACF,CAAC;EACDS,OAAO,EAAE;IACP,MAAMC,WAAWA,CAAC;MAAEC;IAAO,CAAC,EAAEC,IAAI,EAAE;MAClCP,OAAO,CAACC,GAAG,CAACM,IAAI,CAAC;MAEjB,MAAMnB,KAAK,CACTmB,IAAI,EACHC,QAAQ,IAAK;QACZR,OAAO,CAACC,GAAG,CAACO,QAAQ,CAACC,IAAI,CAACC,OAAO,CAAC;QAClC,IAAIF,QAAQ,CAACC,IAAI,CAACC,OAAO,KAAK,SAAS,EAAE;UACvC,IAAIC,KAAK,GAAGH,QAAQ,CAACC,IAAI,CAAC,cAAc,CAAC;UACzCT,OAAO,CAACC,GAAG,CAACU,KAAK,CAAC;UAClBL,MAAM,CAAC,cAAc,EAAE,IAAI,CAAC;UAC5BA,MAAM,CAAC,oBAAoB,EAAE,KAAK,CAAC;UACnCM,cAAc,CAACC,OAAO,CAAC,cAAc,EAAEF,KAAK,CAAC;QAC/C,CAAC,MAAM;UACLX,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;UACjBK,MAAM,CAAC,cAAc,EAAE,KAAK,CAAC;UAC7BA,MAAM,CAAC,oBAAoB,EAAE,IAAI,CAAC;QACpC;MACF,CAAC,EACD,MAAM,CAAC,CACT,CAAC;IACH,CAAC;IACDQ,WAAWA,CAAC;MAAER;IAAO,CAAC,EAAEK,KAAK,EAAE;MAC7BX,OAAO,CAACC,GAAG,CAAC,KAAK,GAAGU,KAAK,CAAC;MAE1B,IAAII,YAAY,GAAG5B,UAAU,CAACwB,KAAK,CAAC;MACpCX,OAAO,CAACC,GAAG,CAACc,YAAY,CAAC;MACzB1B,QAAQ,CACN0B,YAAY,CAACC,MAAM,EAClBR,QAAQ,IAAK;QACZ,IAAIA,QAAQ,CAACC,IAAI,CAACC,OAAO,KAAK,SAAS,EAAE;UACvCJ,MAAM,CAAC,eAAe,EAAEE,QAAQ,CAACC,IAAI,CAACd,QAAQ,CAAC;UAC/CK,OAAO,CAACC,GAAG,CAACO,QAAQ,CAACC,IAAI,CAAC;QAC5B,CAAC,MAAM;UACLT,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;QAC3B;MACF,CAAC,EACAgB,KAAK,IAAK;QACTjB,OAAO,CAACC,GAAG,CAACgB,KAAK,CAAC;MACpB,CACF,CAAC;IACH;EACF;AACF,CAAC;AAED,eAAe3B,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}