{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n//뷰엑스 준비\nimport { mapState, mapActions } from \"vuex\";\n\n//session 대신 저장할 공간\nconst memberStore = \"memberStore\";\nexport default {\n  name: \"MemberLogin\",\n  data() {\n    return {\n      user: {\n        userid: null,\n        userpwd: null\n      }\n    };\n  },\n  computed: {\n    ...mapState(memberStore, [\"isLogin\", \"isLoginError\"])\n  },\n  methods: {\n    ...mapActions(memberStore, [\"userConfirm\", \"getUserInfo\"]),\n    async confirm() {\n      await this.userConfirm(this.user);\n      let token = sessionStorage.getItem(\"access-token\");\n      if (this.isLogin) {\n        // 로그인 확인\n        await this.getUserInfo(token);\n        console.log(\"hi\");\n        this.$router.push({\n          name: \"main\"\n        });\n      } else {\n        console.log(\"bye\");\n      }\n    },\n    movePage() {\n      this.$router.push({\n        name: \"signup\"\n      });\n    }\n  }\n};","map":{"version":3,"names":["mapState","mapActions","memberStore","name","data","user","userid","userpwd","computed","methods","confirm","userConfirm","token","sessionStorage","getItem","isLogin","getUserInfo","console","log","$router","push","movePage"],"sources":["src/components/user/MemberSignIn.vue"],"sourcesContent":["<template>\n  <div class=\"hello\">\n    <b-container class=\"bv-example-row mt-3\">\n      <b-row>\n        <b-col>\n          <h3>로그인</h3>\n        </b-col>\n      </b-row>\n      <b-row>\n        <b-col></b-col>\n        <b-col cols=\"8\">\n          <b-card class=\"text-center mt-3\" style=\"max-width: 40rem\" align=\"left\">\n            <b-form class=\"text-left\">\n              <b-form-group label=\"아이디:\" label-for=\"userid\">\n                <b-form-input\n                  id=\"userid\"\n                  v-model=\"user.userId\"\n                  required\n                  placeholder=\"아이디 입력\"\n                  @keyup.enter=\"confirm\"\n                ></b-form-input>\n              </b-form-group>\n              <b-form-group label=\"비밀번호:\" label-for=\"userpwd\">\n                <b-form-input\n                  type=\"password\"\n                  id=\"userpwd\"\n                  v-model=\"user.userPwd\"\n                  required\n                  placeholder=\"비밀번호 입력\"\n                  @keyup.enter=\"confirm\"\n                ></b-form-input>\n              </b-form-group>\n              <b-alert show variant=\"danger\" v-if=\"isLoginError\"\n                >아이디 또는 비밀번호를 확인하세요.</b-alert\n              >\n              <b-button type=\"button\" class=\"m-1\" @click=\"confirm\">로그인</b-button>\n              <b-button type=\"button\" class=\"m-1\" @click=\"movePage\">회원가입</b-button>\n            </b-form>\n          </b-card>\n        </b-col>\n        <b-col></b-col>\n      </b-row>\n    </b-container>\n  </div>\n</template>\n\n<script>\n//뷰엑스 준비\nimport { mapState, mapActions } from \"vuex\";\n\n//session 대신 저장할 공간\nconst memberStore = \"memberStore\";\n\nexport default {\n  name: \"MemberLogin\",\n  data() {\n    return {\n      user: {\n        userid: null,\n        userpwd: null,\n      },\n    };\n  },\n  computed: {\n    ...mapState(memberStore, [\"isLogin\", \"isLoginError\"]),\n  },\n  methods: {\n    ...mapActions(memberStore, [\"userConfirm\", \"getUserInfo\"]),\n    async confirm() {\n      await this.userConfirm(this.user);\n      let token = sessionStorage.getItem(\"access-token\");\n\n      if (this.isLogin) {\n        // 로그인 확인\n        await this.getUserInfo(token);\n        console.log(\"hi\");\n        this.$router.push({ name: \"main\" });\n      } else {\n        console.log(\"bye\");\n      }\n    },\n    movePage() {\n      this.$router.push({ name: \"signup\" });\n    },\n  },\n};\n</script>\n\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\n</style>\n"],"mappings":";AA+CA;AACA,SAAAA,QAAA,EAAAC,UAAA;;AAEA;AACA,MAAAC,WAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,IAAA;QACAC,MAAA;QACAC,OAAA;MACA;IACA;EACA;EACAC,QAAA;IACA,GAAAR,QAAA,CAAAE,WAAA;EACA;EACAO,OAAA;IACA,GAAAR,UAAA,CAAAC,WAAA;IACA,MAAAQ,QAAA;MACA,WAAAC,WAAA,MAAAN,IAAA;MACA,IAAAO,KAAA,GAAAC,cAAA,CAAAC,OAAA;MAEA,SAAAC,OAAA;QACA;QACA,WAAAC,WAAA,CAAAJ,KAAA;QACAK,OAAA,CAAAC,GAAA;QACA,KAAAC,OAAA,CAAAC,IAAA;UAAAjB,IAAA;QAAA;MACA;QACAc,OAAA,CAAAC,GAAA;MACA;IACA;IACAG,SAAA;MACA,KAAAF,OAAA,CAAAC,IAAA;QAAAjB,IAAA;MAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}