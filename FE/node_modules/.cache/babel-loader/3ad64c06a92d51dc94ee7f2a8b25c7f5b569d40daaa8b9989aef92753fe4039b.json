{"ast":null,"code":"import { mapState, mapActions, mapMutations } from \"vuex\";\nimport { apiInstance } from \"@/api/index.js\";\nconst http = apiInstance();\nconst memberStore = \"memberStore\";\nconst mapStore = \"mapStore\";\nexport default {\n  name: \"OfficeList\",\n  data() {\n    return {\n      offi: [],\n      detail: {\n        id: \"\",\n        sidoname: \"\",\n        jeon: \"\",\n        wal: 0,\n        name: \"\",\n        dong: \"\",\n        jibun: \"\",\n        floor: \"\",\n        area: 0,\n        img: 0,\n        type: \"월세\",\n        construction: 0\n      },\n      randnum: []\n    };\n  },\n  computed: {\n    ...mapState(mapStore, [\"sidos\", \"guguns\", \"dongs\", \"officetels\", \"house\"]),\n    ...mapState(memberStore, [\"userInfo\"])\n  },\n  methods: {\n    ...mapActions(mapStore, [\"setHouseDetail\"]),\n    ...mapMutations(mapStore, [\"SET_DETAIL_HOUSE\"]),\n    goDetail(o, imgnum) {\n      this.$emit(\"changeToggle1\", false);\n      this.detail.id = this.userInfo.userId;\n      this.detail.jeon = o.보증금;\n      this.detail.wal = o.월세;\n      this.detail.name = o.단지;\n      this.detail.dong = o.법정동;\n      this.detail.jibun = o.지번;\n      this.detail.floor = String(o.층);\n      this.detail.area = o.전용면적;\n      this.detail.construction = o.건축년도;\n      if (isNaN(imgnum)) this.detail.img = 0;else this.detail.img = imgnum;\n      if (o.월세금액 == 0) {\n        this.detail.type = \"전세\";\n      }\n      this.setHouseDetail(this.detail);\n    },\n    moveCenter(index) {\n      // 지역 코드 찾는 for문\n      for (let i = 0; i < 18; i++) {\n        if (String(this.offi[index].지역코드).substr(0, 2) == this.sidos[i].value) {\n          this.detail.sidoname = this.sidos[i].text;\n          break;\n        }\n      }\n      let addr = this.detail.sidoname + \" \" + this.offi[index].법정동 + \" \" + this.offi[index].지번;\n      console.log(\"선택된 주소\", addr);\n      this.$emit(\"addr\", addr);\n      this.$emit(\"flag\", true);\n    },\n    moveCenterOnly(index) {\n      // 지역 코드 찾는 for문\n      for (let i = 0; i < 18; i++) {\n        if (String(this.offi[index].지역코드).substr(0, 2) == this.sidos[i].value) {\n          this.detail.sidoname = this.sidos[i].text;\n          break;\n        }\n      }\n      let addr = this.detail.sidoname + \" \" + this.offi[index].법정동 + \" \" + this.offi[index].지번;\n      console.log(\"선택된 주소\", addr);\n      this.$emit(\"addr\", addr);\n      this.$emit(\"flag\", false);\n    },\n    isCheck() {\n      http.post(`/like/getOne`, this.detail).then(response => {\n        console.log(\"getOne detail\", this.detail);\n        console.log(response);\n        if (response.data == \"\") {\n          // 목록에 없으면\n          console.log(\"getOne false\");\n          this.$emit(\"check\", 1);\n        } else {\n          console.log(\"getOne true\"); // 목록에 있으면 0\n          this.$emit(\"check\", 0);\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    clickDetail(o, index) {\n      this.moveCenterOnly(index);\n      this.goDetail(o, this.randnum[index]);\n      this.isCheck();\n    }\n  },\n  watch: {\n    officetels() {\n      this.offi = this.officetels;\n      for (var i = 0; i < this.officetels.length; i++) {\n        this.randnum[i] = Math.floor(Math.random() * 20) + 1;\n        console.log(this.randnum[i]);\n      }\n    }\n  }\n};","map":{"version":3,"names":["mapState","mapActions","mapMutations","apiInstance","http","memberStore","mapStore","name","data","offi","detail","id","sidoname","jeon","wal","dong","jibun","floor","area","img","type","construction","randnum","computed","methods","goDetail","o","imgnum","$emit","userInfo","userId","보증금","월세","단지","법정동","지번","String","층","전용면적","건축년도","isNaN","월세금액","setHouseDetail","moveCenter","index","i","지역코드","substr","sidos","value","text","addr","console","log","moveCenterOnly","isCheck","post","then","response","catch","error","clickDetail","watch","officetels","length","Math","random"],"sources":["src/components/omap/OfficeList.vue"],"sourcesContent":["<template>\n  <div class=\"mt-4\">\n    <b-card\n      :img-src=\"require('@/assets/' + randnum[index] + '.jpg')\"\n      img-left\n      class=\"mb-3\"\n      v-model=\"offi\"\n      v-for=\"(o, index) in offi\"\n      :key=\"index\"\n      @click=\"moveCenter(index)\"\n    >\n      <b-card-text>\n        <h4 v-if=\"o.월세 == 0\">\n          전세 <br />\n          {{ o.보증금 }}만원\n        </h4>\n        <h4 v-else>\n          월세 <br />\n          {{ o.보증금 }}만원/{{ o.월세 }}만원\n        </h4>\n        <b-list-group-item>{{ o.단지 }}</b-list-group-item>\n        <b-list-group-item>{{ o.법정동 }}-{{ o.지번 }} {{ o.층 }}층</b-list-group-item>\n        <b-list-group-item>{{ o.전용면적 }}㎡</b-list-group-item>\n        <b-list-group-item\n          ><b-button @click=\"clickDetail(o, index)\">상세보기</b-button>\n        </b-list-group-item>\n      </b-card-text>\n    </b-card>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapActions, mapMutations } from \"vuex\";\nimport { apiInstance } from \"@/api/index.js\";\n\nconst http = apiInstance();\nconst memberStore = \"memberStore\";\nconst mapStore = \"mapStore\";\n\nexport default {\n  name: \"OfficeList\",\n  data() {\n    return {\n      offi: [],\n      detail: {\n        id: \"\",\n        sidoname: \"\",\n        jeon: \"\",\n        wal: 0,\n        name: \"\",\n        dong: \"\",\n        jibun: \"\",\n        floor: \"\",\n        area: 0,\n        img: 0,\n        type: \"월세\",\n        construction: 0,\n      },\n      randnum: [],\n    };\n  },\n  computed: {\n    ...mapState(mapStore, [\"sidos\", \"guguns\", \"dongs\", \"officetels\", \"house\"]),\n    ...mapState(memberStore, [\"userInfo\"]),\n  },\n  methods: {\n    ...mapActions(mapStore, [\"setHouseDetail\"]),\n    ...mapMutations(mapStore, [\"SET_DETAIL_HOUSE\"]),\n    goDetail(o, imgnum) {\n      this.$emit(\"changeToggle1\", false);\n      this.detail.id = this.userInfo.userId;\n      this.detail.jeon = o.보증금;\n      this.detail.wal = o.월세;\n      this.detail.name = o.단지;\n      this.detail.dong = o.법정동;\n      this.detail.jibun = o.지번;\n      this.detail.floor = String(o.층);\n      this.detail.area = o.전용면적;\n      this.detail.construction = o.건축년도;\n\n      if (isNaN(imgnum)) this.detail.img = 0;\n      else this.detail.img = imgnum;\n\n      if (o.월세금액 == 0) {\n        this.detail.type = \"전세\";\n      }\n      this.setHouseDetail(this.detail);\n    },\n    moveCenter(index) {\n      // 지역 코드 찾는 for문\n      for (let i = 0; i < 18; i++) {\n        if (String(this.offi[index].지역코드).substr(0, 2) == this.sidos[i].value) {\n          this.detail.sidoname = this.sidos[i].text;\n          break;\n        }\n      }\n      let addr = this.detail.sidoname + \" \" + this.offi[index].법정동 + \" \" + this.offi[index].지번;\n      console.log(\"선택된 주소\", addr);\n      this.$emit(\"addr\", addr);\n      this.$emit(\"flag\", true);\n    },\n    moveCenterOnly(index) {\n      // 지역 코드 찾는 for문\n      for (let i = 0; i < 18; i++) {\n        if (String(this.offi[index].지역코드).substr(0, 2) == this.sidos[i].value) {\n          this.detail.sidoname = this.sidos[i].text;\n          break;\n        }\n      }\n      let addr = this.detail.sidoname + \" \" + this.offi[index].법정동 + \" \" + this.offi[index].지번;\n      console.log(\"선택된 주소\", addr);\n      this.$emit(\"addr\", addr);\n      this.$emit(\"flag\", false);\n    },\n    isCheck() {\n      http\n        .post(`/like/getOne`, this.detail)\n        .then((response) => {\n          console.log(\"getOne detail\", this.detail);\n          console.log(response);\n          if (response.data == \"\") {\n            // 목록에 없으면\n            console.log(\"getOne false\");\n            this.$emit(\"check\", 1);\n          } else {\n            console.log(\"getOne true\"); // 목록에 있으면 0\n            this.$emit(\"check\", 0);\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    },\n    clickDetail(o, index) {\n      this.moveCenterOnly(index);\n      this.goDetail(o, this.randnum[index]);\n      this.isCheck();\n    },\n  },\n  watch: {\n    officetels() {\n      this.offi = this.officetels;\n      for (var i = 0; i < this.officetels.length; i++) {\n        this.randnum[i] = Math.floor(Math.random() * 20) + 1;\n        console.log(this.randnum[i]);\n      }\n    },\n  },\n};\n</script>\n<style scoped></style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}