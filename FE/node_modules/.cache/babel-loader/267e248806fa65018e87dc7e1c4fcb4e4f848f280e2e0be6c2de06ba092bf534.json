{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapState } from \"vuex\";\nconst mapStore = \"mapStore\";\nexport default {\n  name: \"HouseMap\",\n  components: {},\n  props: {},\n  data() {\n    return {\n      map: null\n    };\n  },\n  created() {},\n  mounted() {\n    if (window.kakao && window.kakao.maps) {\n      this.loadMap1();\n    } else {\n      this.loadScript();\n    }\n  },\n  computed: {\n    ...mapState(mapStore, [\"houses\", \"selectsido\"])\n  },\n  methods: {\n    // api 불러오기\n\n    loadScript() {\n      const script = document.createElement(\"script\");\n      script.src = \"//dapi.kakao.com/v2/maps/sdk.js?appkey=2c45a57d65518ab4eebc76e4b1a15772&autoload=false&libraries=services\";\n      script.onload = () => window.kakao.maps.load(() => this.loadMap1());\n      document.head.appendChild(script);\n    },\n    // 기본맵 출력하기\n    loadMap1() {\n      const container = document.getElementById(\"map\");\n      const options = {\n        center: new window.kakao.maps.LatLng(33.45071, 126.570667),\n        level: 3\n      };\n      //지도 생성\n      this.map = new window.kakao.maps.Map(container, options);\n      // this.loadMaker(lat, lng);\n    },\n\n    // 맵 출력하기\n    loadMap(lat, lng) {\n      console.log(\"맵 띄우는중 2!!\");\n      console.log(\"복사본\", lat, lng, lat[0]);\n\n      //  for (var k=0;k<lat.length;k++){\n      //  console.log(\"이건 나와? \",lat[k], lng[k] ,);\n      // }\n\n      const container = document.getElementById(\"map\");\n      const options = {\n        center: new window.kakao.maps.LatLng(lat[0], lng[0]),\n        level: 3\n      };\n      //지도 생성\n      this.map = new window.kakao.maps.Map(container, options);\n      this.loadMaker(lat, lng);\n    },\n    // 지정한 위치에 마커 불러오기  \n    loadMaker(lat, lng) {\n      console.log(\"마커 띄우는중 3!!\");\n      var markerPosition = [];\n      console.log(\"길이\", this.houses.length);\n\n      //console.log(\"11111\" ,lat[0] );\n\n      for (var i = 0; i < this.houses.length; i++) {\n        console.log(\"22\");\n        markerPosition.push({\n          //title: '삼성화재', \n          latlng: new window.kakao.maps.LatLng(lat[i], lng[i])\n        });\n      }\n      console.log(markerPosition);\n      for (var l = 0; l < this.houses.length; l++) {\n        const marker = new window.kakao.maps.Marker({\n          map: this.map,\n          // 마커를 표시할 지도\n          position: markerPosition[l].latlng\n          // position: this.markerPosition[i].latlng, // 마커를 표시할 위치\n          // title : markerPosition[i].title, // 마커의 타이틀, 마커에 마우스를 올리면 타이틀이 표시됩니다\n        });\n\n        marker.setMap(this.map);\n      }\n    },\n    async convertLatLng(houselist) {\n      let addr = [];\n      let lat = [];\n      let lng = [];\n\n      // 주소-좌표 변환 객체 생성\n      console.log(\"주소 변환중 1!\");\n      const geocoder = new window.kakao.maps.services.Geocoder();\n      //const address = \"대전광역시 유성구 동서대로 98-39\";\n\n      for (var i = 0; i < houselist.length; i++) {\n        addr[i] = houselist[i].법정동 + \" \" + houselist[i].지번;\n\n        // // 주소로 좌표 변환 요청\n        // geocoder.addressSearch(addr[i], (result, status) => {\n        //   if (status === window.kakao.maps.services.Status.OK) {\n        //     // 좌표 변환 성공\n        //     lat.push(result[0].y); // 위도\n        //     lng.push(result[0].x); // 경도\n        //     console.log(\"여기봐 \",lat[i], lng[i]);\n\n        //   } else {\n        //     // 좌표 변환 실패 또는 유효하지 않은 주소\n        //     console.error(\"Failed to convert address to coordinates:\", status);\n        //   }\n        // }); \n        // 주소로 좌표 변환 요청\n        await new Promise((resolve, reject) => {\n          geocoder.addressSearch(addr[i], (result, status) => {\n            if (status === window.kakao.maps.services.Status.OK) {\n              lat.push(result[0].y); // 위도\n              lng.push(result[0].x); // 경도\n              console.log(\"여기봐 \", lat[i], lng[i]);\n              resolve();\n            } else {\n              console.error(\"Failed to convert address to coordinates:\", status);\n              reject();\n            }\n          });\n        });\n      }\n      console.log(\"원본 \", lat, lng);\n      console.log(\"원본 11\", lat[0], lng[0]);\n      // 좌표를 활용하여 중심좌표 설정해 지도 다시 로드\n      this.loadMap(lat, lng);\n    }\n  },\n  watch: {\n    houses() {\n      this.convertLatLng(this.houses);\n    }\n  }\n};","map":{"version":3,"names":["mapState","mapStore","name","components","props","data","map","created","mounted","window","kakao","maps","loadMap1","loadScript","computed","methods","script","document","createElement","src","onload","load","head","appendChild","container","getElementById","options","center","LatLng","level","Map","loadMap","lat","lng","console","log","loadMaker","markerPosition","houses","length","i","push","latlng","l","marker","Marker","position","setMap","convertLatLng","houselist","addr","geocoder","services","Geocoder","법정동","지번","Promise","resolve","reject","addressSearch","result","status","Status","OK","y","x","error","watch"],"sources":["src/components/map/HouseMap.vue"],"sourcesContent":["<template>\n  <div id=\"map\"></div>\n</template>\n\n<script>\nimport { mapState} from \"vuex\";\nconst mapStore = \"mapStore\";\n\n\nexport default {\n  name: \"HouseMap\",\n  components: {},\n  props:{\n  },\n  data() {\n    return {\n      map: null,\n    };\n  },\n  created() {\n   \n  },\n  mounted() {\n    if (window.kakao && window.kakao.maps) {\n      this.loadMap1();\n    } else {\n      this.loadScript();\n    }\n  },\n  computed: {\n    ...mapState(mapStore, [\"houses\",\"selectsido\"]),\n    \n},  \n  methods: {\n    // api 불러오기\n    \n    loadScript() {\n      const script = document.createElement(\"script\");\n       script.src =\n        \"//dapi.kakao.com/v2/maps/sdk.js?appkey=2c45a57d65518ab4eebc76e4b1a15772&autoload=false&libraries=services\";\n      script.onload = () => window.kakao.maps.load(() => this.loadMap1());\n\n      document.head.appendChild(script);\n    },\n\n    // 기본맵 출력하기\n    loadMap1() {\n      const container = document.getElementById(\"map\");\n      const options = {      \n        center: new window.kakao.maps.LatLng(33.45071, 126.570667),\n        level: 3,\n      };\n      //지도 생성\n      this.map = new window.kakao.maps.Map(container, options);\n      // this.loadMaker(lat, lng);\n    },\n\n    // 맵 출력하기\n    loadMap(lat, lng) {\n      console.log(\"맵 띄우는중 2!!\");\n      console.log(\"복사본\", lat , lng, lat[0]);\n\n      //  for (var k=0;k<lat.length;k++){\n      //  console.log(\"이건 나와? \",lat[k], lng[k] ,);\n      // }\n\n      const container = document.getElementById(\"map\");\n      const options = {     \n        center: new window.kakao.maps.LatLng(lat[0], lng[0]),\n        level: 3,\n      };\n      //지도 생성\n      this.map = new window.kakao.maps.Map(container, options);\n      this.loadMaker(lat, lng);\n    },\n\n    // 지정한 위치에 마커 불러오기  \n    loadMaker(lat, lng) {\n      console.log(\"마커 띄우는중 3!!\");\n      var markerPosition = [];\n      console.log(\"길이\", this.houses.length);\n\n      //console.log(\"11111\" ,lat[0] );\n\n      for (var i = 0; i < this.houses.length; i ++) {\n         console.log(\"22\");\n        markerPosition.push(\n            {\n                //title: '삼성화재', \n                latlng: new window.kakao.maps.LatLng(lat[i], lng[i])\n            });\n        \n      }\n      console.log(markerPosition);\n\n      for (var l = 0; l < this.houses.length; l ++) {\n        const marker = new window.kakao.maps.Marker({\n            map: this.map, // 마커를 표시할 지도\n            position: markerPosition[l].latlng\n            // position: this.markerPosition[i].latlng, // 마커를 표시할 위치\n            // title : markerPosition[i].title, // 마커의 타이틀, 마커에 마우스를 올리면 타이틀이 표시됩니다\n        });\n         marker.setMap(this.map);\n      }\n    \n    },\n\n    async convertLatLng(houselist)  {\n      let addr =[];\n      let lat =[];\n      let lng=[];\n\n      // 주소-좌표 변환 객체 생성\n      console.log(\"주소 변환중 1!\");\n\n      const geocoder = new window.kakao.maps.services.Geocoder();\n      //const address = \"대전광역시 유성구 동서대로 98-39\";\n   \n      for (var i=0;i<houselist.length;i++){\n        addr[i] = houselist[i].법정동 + \" \" + houselist[i].지번;\n\n\n\n        // // 주소로 좌표 변환 요청\n        // geocoder.addressSearch(addr[i], (result, status) => {\n        //   if (status === window.kakao.maps.services.Status.OK) {\n        //     // 좌표 변환 성공\n        //     lat.push(result[0].y); // 위도\n        //     lng.push(result[0].x); // 경도\n        //     console.log(\"여기봐 \",lat[i], lng[i]);\n            \n        //   } else {\n        //     // 좌표 변환 실패 또는 유효하지 않은 주소\n        //     console.error(\"Failed to convert address to coordinates:\", status);\n        //   }\n        // }); \n            // 주소로 좌표 변환 요청\n    await new Promise((resolve, reject) => {\n      geocoder.addressSearch(addr[i], (result, status) => {\n        if (status === window.kakao.maps.services.Status.OK) {\n          lat.push(result[0].y); // 위도\n          lng.push(result[0].x); // 경도\n          console.log(\"여기봐 \", lat[i], lng[i]);\n          resolve();\n        } else {\n          console.error(\"Failed to convert address to coordinates:\", status);\n          reject();\n        }\n      });\n    });\n      }\n      console.log(\"원본 \", lat, lng);\n      console.log(\"원본 11\", lat[0], lng[0]);\n      // 좌표를 활용하여 중심좌표 설정해 지도 다시 로드\n      this.loadMap(lat, lng);\n     }\n      \n\n    \n    \n  },\n\n   watch: {\n   houses(){\n      this.convertLatLng(this.houses);\n    }\n  },\n};\n</script>\n\n<style scoped></style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}