{"ast":null,"code":"import { mapState } from \"vuex\";\nconst mapStore = \"mapStore\";\nexport default {\n  name: \"OfficeMap\",\n  components: {},\n  data() {\n    return {\n      map: null,\n      selectHouse: {}\n    };\n  },\n  computed: {\n    ...mapState(mapStore, [\"house\"])\n  },\n  created() {},\n  mounted() {\n    if (window.kakao && window.kakao.mpas) {\n      this.loadMap(33.450701, 126.570667);\n    } else {\n      this.loadScript();\n    }\n  },\n  methods: {\n    // api 불러오기\n    loadScript() {\n      const script = document.createElement(\"script\");\n      script.src = \"//dapi.kakao.com/v2/maps/sdk.js?appkey=2c45a57d65518ab4eebc76e4b1a15772&autoload=false\";\n      script.onload = () => window.kakao.maps.load(this.loadMap(33.45071, 126.570667));\n      document.head.appendChild(script);\n    },\n    // 맵 출력하기\n    loadMap(lat, lng) {\n      const container = document.getElementById(\"map\");\n      const options = {\n        center: new window.kakao.maps.LatLng(lat, lng),\n        level: 3\n      };\n      this.map = new window.kakao.maps.Map(container, options);\n      this.loadMaker(lat, lng);\n    },\n    // 지정한 위치에 마커 불러오기\n    loadMaker(lat, lng) {\n      const markerPosition = new window.kakao.maps.LatLng(lat, lng);\n      const marker = new window.kakao.maps.Marker({\n        position: markerPosition\n      });\n      marker.setMap(this.map);\n    },\n    // 장소 좌표로 변경\n    convertLatLng() {\n      // 주소-좌표 변환 객체 생성\n      const geocoder = new window.kakao.maps.services.Geocoder();\n      const address = this.house.법정동 + \" \" + this.house.지번;\n      console.log(\"addr\", address);\n\n      // 주소로 좌표 변환 요청\n      geocoder.addressSearch(address, (result, status) => {\n        if (status === window.kakao.maps.services.Status.OK) {\n          // 좌표 변환 성공\n          const latitude = result[0].y; // 위도\n          const longitude = result[0].x; // 경도\n\n          console.log(\"lat\", latitude, \" lng\", longitude);\n\n          // 좌표를 활용하여 중심좌표 설정해 지도다시 로드\n          this.loadMap(latitude, longitude);\n        } else {\n          // 좌표 변환 실패 또는 유효하지 않은 주소\n          console.error(\"Failed to convert address to coordinates:\", status);\n        }\n      });\n    }\n  },\n  watch: {\n    house() {\n      this.selectHouse = this.house;\n    }\n  }\n};","map":{"version":3,"names":["mapState","mapStore","name","components","data","map","selectHouse","computed","created","mounted","window","kakao","mpas","loadMap","loadScript","methods","script","document","createElement","src","onload","maps","load","head","appendChild","lat","lng","container","getElementById","options","center","LatLng","level","Map","loadMaker","markerPosition","marker","Marker","position","setMap","convertLatLng","geocoder","services","Geocoder","address","house","법정동","지번","console","log","addressSearch","result","status","Status","OK","latitude","y","longitude","x","error","watch"],"sources":["src/components/omap/OfficeMap.vue"],"sourcesContent":["<template>\n  <div id=\"map\"></div>\n</template>\n\n<script>\nimport { mapState } from \"vuex\";\n\nconst mapStore = \"mapStore\";\n\nexport default {\n  name: \"OfficeMap\",\n  components: {},\n  data() {\n    return {\n      map: null,\n      selectHouse: {},\n    };\n  },\n  computed: {\n    ...mapState(mapStore, [\"house\"]),\n  },\n  created() {},\n  mounted() {\n    if (window.kakao && window.kakao.mpas) {\n      this.loadMap(33.450701, 126.570667);\n    } else {\n      this.loadScript();\n    }\n  },\n  methods: {\n    // api 불러오기\n    loadScript() {\n      const script = document.createElement(\"script\");\n      script.src =\n        \"//dapi.kakao.com/v2/maps/sdk.js?appkey=2c45a57d65518ab4eebc76e4b1a15772&autoload=false\";\n      script.onload = () => window.kakao.maps.load(this.loadMap(33.45071, 126.570667));\n\n      document.head.appendChild(script);\n    },\n    // 맵 출력하기\n    loadMap(lat, lng) {\n      const container = document.getElementById(\"map\");\n      const options = {\n        center: new window.kakao.maps.LatLng(lat, lng),\n        level: 3,\n      };\n\n      this.map = new window.kakao.maps.Map(container, options);\n      this.loadMaker(lat, lng);\n    },\n    // 지정한 위치에 마커 불러오기\n    loadMaker(lat, lng) {\n      const markerPosition = new window.kakao.maps.LatLng(lat, lng);\n\n      const marker = new window.kakao.maps.Marker({\n        position: markerPosition,\n      });\n\n      marker.setMap(this.map);\n    },\n    // 장소 좌표로 변경\n    convertLatLng() {\n      // 주소-좌표 변환 객체 생성\n      const geocoder = new window.kakao.maps.services.Geocoder();\n\n      const address = this.house.법정동 + \" \" + this.house.지번;\n\n      console.log(\"addr\", address);\n\n      // 주소로 좌표 변환 요청\n      geocoder.addressSearch(address, (result, status) => {\n        if (status === window.kakao.maps.services.Status.OK) {\n          // 좌표 변환 성공\n          const latitude = result[0].y; // 위도\n          const longitude = result[0].x; // 경도\n\n          console.log(\"lat\", latitude, \" lng\", longitude);\n\n          // 좌표를 활용하여 중심좌표 설정해 지도다시 로드\n          this.loadMap(latitude, longitude);\n        } else {\n          // 좌표 변환 실패 또는 유효하지 않은 주소\n          console.error(\"Failed to convert address to coordinates:\", status);\n        }\n      });\n    },\n  },\n  watch: {\n    house() {\n      this.selectHouse = this.house;\n    },\n  },\n};\n</script>\n\n<style scoped></style>\n"],"mappings":"AAKA,SAAAA,QAAA;AAEA,MAAAC,QAAA;AAEA;EACAC,IAAA;EACAC,UAAA;EACAC,KAAA;IACA;MACAC,GAAA;MACAC,WAAA;IACA;EACA;EACAC,QAAA;IACA,GAAAP,QAAA,CAAAC,QAAA;EACA;EACAO,QAAA;EACAC,QAAA;IACA,IAAAC,MAAA,CAAAC,KAAA,IAAAD,MAAA,CAAAC,KAAA,CAAAC,IAAA;MACA,KAAAC,OAAA;IACA;MACA,KAAAC,UAAA;IACA;EACA;EACAC,OAAA;IACA;IACAD,WAAA;MACA,MAAAE,MAAA,GAAAC,QAAA,CAAAC,aAAA;MACAF,MAAA,CAAAG,GAAA,GACA;MACAH,MAAA,CAAAI,MAAA,SAAAV,MAAA,CAAAC,KAAA,CAAAU,IAAA,CAAAC,IAAA,MAAAT,OAAA;MAEAI,QAAA,CAAAM,IAAA,CAAAC,WAAA,CAAAR,MAAA;IACA;IACA;IACAH,QAAAY,GAAA,EAAAC,GAAA;MACA,MAAAC,SAAA,GAAAV,QAAA,CAAAW,cAAA;MACA,MAAAC,OAAA;QACAC,MAAA,MAAApB,MAAA,CAAAC,KAAA,CAAAU,IAAA,CAAAU,MAAA,CAAAN,GAAA,EAAAC,GAAA;QACAM,KAAA;MACA;MAEA,KAAA3B,GAAA,OAAAK,MAAA,CAAAC,KAAA,CAAAU,IAAA,CAAAY,GAAA,CAAAN,SAAA,EAAAE,OAAA;MACA,KAAAK,SAAA,CAAAT,GAAA,EAAAC,GAAA;IACA;IACA;IACAQ,UAAAT,GAAA,EAAAC,GAAA;MACA,MAAAS,cAAA,OAAAzB,MAAA,CAAAC,KAAA,CAAAU,IAAA,CAAAU,MAAA,CAAAN,GAAA,EAAAC,GAAA;MAEA,MAAAU,MAAA,OAAA1B,MAAA,CAAAC,KAAA,CAAAU,IAAA,CAAAgB,MAAA;QACAC,QAAA,EAAAH;MACA;MAEAC,MAAA,CAAAG,MAAA,MAAAlC,GAAA;IACA;IACA;IACAmC,cAAA;MACA;MACA,MAAAC,QAAA,OAAA/B,MAAA,CAAAC,KAAA,CAAAU,IAAA,CAAAqB,QAAA,CAAAC,QAAA;MAEA,MAAAC,OAAA,QAAAC,KAAA,CAAAC,GAAA,cAAAD,KAAA,CAAAE,EAAA;MAEAC,OAAA,CAAAC,GAAA,SAAAL,OAAA;;MAEA;MACAH,QAAA,CAAAS,aAAA,CAAAN,OAAA,GAAAO,MAAA,EAAAC,MAAA;QACA,IAAAA,MAAA,KAAA1C,MAAA,CAAAC,KAAA,CAAAU,IAAA,CAAAqB,QAAA,CAAAW,MAAA,CAAAC,EAAA;UACA;UACA,MAAAC,QAAA,GAAAJ,MAAA,IAAAK,CAAA;UACA,MAAAC,SAAA,GAAAN,MAAA,IAAAO,CAAA;;UAEAV,OAAA,CAAAC,GAAA,QAAAM,QAAA,UAAAE,SAAA;;UAEA;UACA,KAAA5C,OAAA,CAAA0C,QAAA,EAAAE,SAAA;QACA;UACA;UACAT,OAAA,CAAAW,KAAA,8CAAAP,MAAA;QACA;MACA;IACA;EACA;EACAQ,KAAA;IACAf,MAAA;MACA,KAAAvC,WAAA,QAAAuC,KAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}