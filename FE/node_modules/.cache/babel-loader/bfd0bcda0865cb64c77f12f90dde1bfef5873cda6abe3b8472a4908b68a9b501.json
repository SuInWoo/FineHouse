{"ast":null,"code":"import { mapState, mapActions, mapMutations } from \"vuex\";\nimport { apiInstance } from \"@/api/index.js\";\nconst http = apiInstance();\nconst memberStore = \"memberStore\";\nconst mapStore = \"mapStore\";\nexport default {\n  components: {},\n  name: \"HouseList\",\n  data() {\n    return {\n      hs: [],\n      detail: {\n        id: \"\",\n        sidoname: \"\",\n        jeon: \"\",\n        wal: 0,\n        name: \"\",\n        dong: \"\",\n        jibun: \"\",\n        floor: \"\",\n        area: 0,\n        img: 0,\n        type: \"월세\",\n        construction: 0\n      },\n      randnum: []\n    };\n  },\n  computed: {\n    ...mapState(mapStore, [\"sidos\", \"guguns\", \"dongs\", \"houses\", \"house\", \"check\"]),\n    ...mapState(memberStore, [\"userInfo\"])\n  },\n  methods: {\n    ...mapActions(mapStore, [\"setHouseDetail\", \"setLikeCheck\"]),\n    ...mapMutations(mapStore, [\"SET_DETAIL_HOUSE\"]),\n    goDetail(h, imgnum) {\n      this.$emit(\"changeToggle1\", false);\n      this.detail.id = this.userInfo.userId;\n      this.detail.jeon = h.보증금액;\n      this.detail.wal = h.월세금액;\n      this.detail.name = h.연립다세대;\n      this.detail.dong = h.법정동;\n      this.detail.jibun = h.지번;\n      this.detail.floor = String(h.층); //  db dto때문에 string 변환\n      this.detail.area = h.전용면적;\n      this.detail.construction = h.건축년도;\n      if (isNaN(imgnum)) this.detail.img = 0;else this.detail.img = imgnum;\n      if (h.월세금액 == 0) {\n        this.detail.type = \"전세\";\n      }\n      this.setHouseDetail(this.detail);\n    },\n    moveCenter(index) {\n      // 지역 코드 찾는 for문\n      for (let i = 0; i < 18; i++) {\n        if (String(this.hs[index].지역코드).substr(0, 2) == this.sidos[i].value) {\n          this.detail.sidoname = this.sidos[i].text;\n          break;\n        }\n      }\n      let addr = this.detail.sidoname + \" \" + this.hs[index].법정동 + \" \" + this.hs[index].지번;\n      console.log(\"선택된 주소\", addr);\n      this.$emit(\"addr\", addr);\n      this.$emit(\"flag\", true);\n    },\n    moveCenterOnly(index) {\n      // 지역 코드 찾는 for문\n      for (let i = 0; i < 18; i++) {\n        if (String(this.hs[index].지역코드).substr(0, 2) == this.sidos[i].value) {\n          this.detail.sidoname = this.sidos[i].text;\n          break;\n        }\n      }\n      let addr = this.detail.sidoname + \" \" + this.hs[index].법정동 + \" \" + this.hs[index].지번;\n      console.log(\"선택된 주소\", addr);\n      this.$emit(\"addr\", addr);\n      this.$emit(\"flag\", false);\n    },\n    isCheck() {\n      http.post(`/like/getOne`, this.detail).then(response => {\n        console.log(\"GetOne resp\", response);\n        if (response.data == \"\") {\n          // 목록에 없으면 0\n          console.log(\"getOne false\");\n          this.setLikeCheck(false);\n        } else {\n          console.log(\"getOne true\"); // 목록에 있으면 1\n          this.setLikeCheck(true);\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    clickDetail(o, index) {\n      this.moveCenterOnly(index);\n      this.goDetail(o, this.randnum[index]);\n      this.isCheck();\n    }\n  },\n  watch: {\n    houses() {\n      this.hs = this.houses;\n      // console.log(\"hs\", this.hs);\n      for (var i = 0; i < this.houses.length; i++) {\n        this.randnum[i] = Math.floor(Math.random() * 20) + 1;\n        console.log(this.randnum[i]);\n      }\n    },\n    house() {}\n  }\n};","map":{"version":3,"names":["mapState","mapActions","mapMutations","apiInstance","http","memberStore","mapStore","components","name","data","hs","detail","id","sidoname","jeon","wal","dong","jibun","floor","area","img","type","construction","randnum","computed","methods","goDetail","h","imgnum","$emit","userInfo","userId","보증금액","월세금액","연립다세대","법정동","지번","String","층","전용면적","건축년도","isNaN","setHouseDetail","moveCenter","index","i","지역코드","substr","sidos","value","text","addr","console","log","moveCenterOnly","isCheck","post","then","response","setLikeCheck","catch","error","clickDetail","o","watch","houses","length","Math","random","house"],"sources":["src/components/map/HouseList.vue"],"sourcesContent":["<template>\n  <div class=\"mt-4\">\n    <b-card\n      :img-src=\"require('@/assets/' + randnum[index] + '.jpg')\"\n      img-left\n      class=\"mb-3\"\n      v-model=\"hs\"\n      v-for=\"(h, index) in hs\"\n      :key=\"index\"\n      @click=\"moveCenter(index)\"\n    >\n      <b-card-text>\n        <h4 v-if=\"h.월세금액 == 0\">\n          전세 <br />\n          {{ h.보증금액 }}만원\n        </h4>\n        <h4 v-else>\n          월세 <br />\n          {{ h.보증금액 }}만원/{{ h.월세금액 }}만원\n        </h4>\n        <b-list-group-item>{{ h.연립다세대 }}</b-list-group-item>\n        <b-list-group-item>{{ h.법정동 }}-{{ h.지번 }} {{ h.층 }}층</b-list-group-item>\n        <b-list-group-item>{{ h.전용면적 }}㎡</b-list-group-item>\n        <b-list-group-item>\n          <b-button pill variant=\"outline-light\" @click=\"clickDetail(h, index)\"\n            ><img src=\"@/assets/detail.png\" style=\"width: 100px\"\n          /></b-button>\n          <!-- <button @click=\"clickDetail(h, index)\">상세보기</button> -->\n        </b-list-group-item>\n      </b-card-text>\n    </b-card>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapActions, mapMutations } from \"vuex\";\nimport { apiInstance } from \"@/api/index.js\";\n\nconst http = apiInstance();\nconst memberStore = \"memberStore\";\nconst mapStore = \"mapStore\";\n\nexport default {\n  components: {},\n  name: \"HouseList\",\n  data() {\n    return {\n      hs: [],\n      detail: {\n        id: \"\",\n        sidoname: \"\",\n        jeon: \"\",\n        wal: 0,\n        name: \"\",\n        dong: \"\",\n        jibun: \"\",\n        floor: \"\",\n        area: 0,\n        img: 0,\n        type: \"월세\",\n        construction: 0,\n      },\n      randnum: [],\n    };\n  },\n  computed: {\n    ...mapState(mapStore, [\"sidos\", \"guguns\", \"dongs\", \"houses\", \"house\", \"check\"]),\n    ...mapState(memberStore, [\"userInfo\"]),\n  },\n  methods: {\n    ...mapActions(mapStore, [\"setHouseDetail\", \"setLikeCheck\"]),\n    ...mapMutations(mapStore, [\"SET_DETAIL_HOUSE\"]),\n    goDetail(h, imgnum) {\n      this.$emit(\"changeToggle1\", false);\n      this.detail.id = this.userInfo.userId;\n      this.detail.jeon = h.보증금액;\n      this.detail.wal = h.월세금액;\n      this.detail.name = h.연립다세대;\n      this.detail.dong = h.법정동;\n      this.detail.jibun = h.지번;\n      this.detail.floor = String(h.층); //  db dto때문에 string 변환\n      this.detail.area = h.전용면적;\n      this.detail.construction = h.건축년도;\n\n      if (isNaN(imgnum)) this.detail.img = 0;\n      else this.detail.img = imgnum;\n\n      if (h.월세금액 == 0) {\n        this.detail.type = \"전세\";\n      }\n      this.setHouseDetail(this.detail);\n    },\n    moveCenter(index) {\n      // 지역 코드 찾는 for문\n      for (let i = 0; i < 18; i++) {\n        if (String(this.hs[index].지역코드).substr(0, 2) == this.sidos[i].value) {\n          this.detail.sidoname = this.sidos[i].text;\n          break;\n        }\n      }\n      let addr = this.detail.sidoname + \" \" + this.hs[index].법정동 + \" \" + this.hs[index].지번;\n      console.log(\"선택된 주소\", addr);\n      this.$emit(\"addr\", addr);\n      this.$emit(\"flag\", true);\n    },\n    moveCenterOnly(index) {\n      // 지역 코드 찾는 for문\n      for (let i = 0; i < 18; i++) {\n        if (String(this.hs[index].지역코드).substr(0, 2) == this.sidos[i].value) {\n          this.detail.sidoname = this.sidos[i].text;\n          break;\n        }\n      }\n      let addr = this.detail.sidoname + \" \" + this.hs[index].법정동 + \" \" + this.hs[index].지번;\n      console.log(\"선택된 주소\", addr);\n      this.$emit(\"addr\", addr);\n      this.$emit(\"flag\", false);\n    },\n    isCheck() {\n      http\n        .post(`/like/getOne`, this.detail)\n        .then((response) => {\n          console.log(\"GetOne resp\", response);\n          if (response.data == \"\") {\n            // 목록에 없으면 0\n            console.log(\"getOne false\");\n            this.setLikeCheck(false);\n          } else {\n            console.log(\"getOne true\"); // 목록에 있으면 1\n            this.setLikeCheck(true);\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    },\n    clickDetail(o, index) {\n      this.moveCenterOnly(index);\n      this.goDetail(o, this.randnum[index]);\n      this.isCheck();\n    },\n  },\n  watch: {\n    houses() {\n      this.hs = this.houses;\n      // console.log(\"hs\", this.hs);\n      for (var i = 0; i < this.houses.length; i++) {\n        this.randnum[i] = Math.floor(Math.random() * 20) + 1;\n        console.log(this.randnum[i]);\n      }\n    },\n    house() {},\n  },\n};\n</script>\n\n<style scoped></style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}