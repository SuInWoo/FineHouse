{"ast":null,"code":"import { mapState, mapActions, mapMutations } from \"vuex\";\nimport { apiInstance } from \"@/api/index.js\";\nconst http = apiInstance();\nconst mapStore = \"mapStore\";\nexport default {\n  name: \"OfficeList\",\n  data() {\n    return {\n      offi: [],\n      detail: {\n        sidoname: \"\",\n        jeon: \"\",\n        wal: 0,\n        name: \"\",\n        dong: \"\",\n        jibun: \"\",\n        floor: \"\",\n        area: 0,\n        img: \"\"\n      },\n      check: false,\n      sidoname: \"\"\n    };\n  },\n  computed: {\n    ...mapState(mapStore, [\"sidos\", \"guguns\", \"dongs\", \"officetels\", \"house\"])\n  },\n  methods: {\n    ...mapActions(mapStore, [\"setHouseDetail\"]),\n    ...mapMutations(mapStore, [\"SET_DETAIL_HOUSE\"]),\n    goDetail(o, imgnum) {\n      this.$emit(\"changeToggle1\", false);\n      this.detail.jeon = o.보증금;\n      this.detail.wal = o.월세;\n      this.detail.name = o.단지;\n      this.detail.dong = o.법정동;\n      this.detail.jibun = o.지번;\n      this.detail.floor = o.층;\n      this.detail.area = o.전용면적;\n      this.detail.sidoname = this.sidoname;\n      if (isNaN(imgnum)) this.detail.img = 0;else this.detail.img = imgnum;\n      this.setHouseDetail(this.detail);\n    },\n    moveCenter(index) {\n      // 지역 코드 찾는 for문\n      for (let i = 0; i < 18; i++) {\n        if (String(this.offi[index].지역코드).substr(0, 2) == this.sidos[i].value) {\n          this.sidoname = this.sidos[i].text;\n          break;\n        }\n      }\n      let addr = this.sidoname + \" \" + this.offi[index].법정동 + \" \" + this.offi[index].지번;\n      console.log(\"선택된 주소\", addr);\n      this.$emit(\"addr\", addr);\n      this.$emit(\"flag\", true);\n    },\n    moveCenterOnly(index) {\n      // 지역 코드 찾는 for문\n      for (let i = 0; i < 18; i++) {\n        if (String(this.offi[index].지역코드).substr(0, 2) == this.sidos[i].value) {\n          this.sidoname = this.sidos[i].text;\n          break;\n        }\n      }\n      let addr = this.sidoname + \" \" + this.offi[index].법정동 + \" \" + this.offi[index].지번;\n      console.log(\"선택된 주소\", addr);\n      this.$emit(\"addr\", addr);\n      this.$emit(\"flag\", false);\n    },\n    isCheck() {\n      http.post(`/like/getOne`, this.detail).then(response => {\n        console.log(response);\n        console.log(\"getOne true\");\n        this.check = true;\n      }).catch(error => {\n        console.log(error);\n        console.log(\"getOne false\");\n        console.log(this.detail);\n        this.check = false;\n      });\n    },\n    clickDetail(o, index) {\n      this.moveCenterOnly(index);\n      this.goDetail(o, (index + 1) % 20);\n      this.isCheck();\n    },\n    setCheck(tf) {\n      this.check = tf;\n    }\n  },\n  watch: {\n    officetels() {\n      this.offi = this.officetels;\n      // console.log(\"offi\", this.offi);\n    },\n\n    house() {\n      this.detail = this.house;\n    }\n  }\n};","map":{"version":3,"names":["mapState","mapActions","mapMutations","apiInstance","http","mapStore","name","data","offi","detail","sidoname","jeon","wal","dong","jibun","floor","area","img","check","computed","methods","goDetail","o","imgnum","$emit","보증금","월세","단지","법정동","지번","층","전용면적","isNaN","setHouseDetail","moveCenter","index","i","String","지역코드","substr","sidos","value","text","addr","console","log","moveCenterOnly","isCheck","post","then","response","catch","error","clickDetail","setCheck","tf","watch","officetels","house"],"sources":["src/components/omap/OfficeList.vue"],"sourcesContent":["<template>\n  <div class=\"mt-4\">\n    <b-card\n      :img-src=\"require('@/assets/' + ((index + 1) % 20) + '.jpg')\"\n      img-left\n      class=\"mb-3\"\n      v-model=\"offi\"\n      v-for=\"(o, index) in offi\"\n      :key=\"index\"\n      @click=\"moveCenter(index)\"\n    >\n      <b-card-text>\n        <h4 v-if=\"o.월세 == 0\">\n          전세 <br />\n          {{ o.보증금 }}만원\n        </h4>\n        <h4 v-else>\n          월세 <br />\n          {{ o.보증금 }}만원/{{ o.월세 }}만원\n        </h4>\n        <b-list-group-item>{{ o.단지 }}</b-list-group-item>\n        <b-list-group-item>{{ o.법정동 }}-{{ o.지번 }} {{ o.층 }}층</b-list-group-item>\n        <b-list-group-item>{{ o.전용면적 }}㎡</b-list-group-item>\n        <b-list-group-item\n          ><b-button @click=\"clickDetail(o, index)\"\n            >상세보기 <office-list @check=\"setCheck\" :check=\"check\"></office-list> </b-button\n        ></b-list-group-item>\n      </b-card-text>\n    </b-card>\n  </div>\n</template>\n<script>\nimport { mapState, mapActions, mapMutations } from \"vuex\";\nimport { apiInstance } from \"@/api/index.js\";\n\nconst http = apiInstance();\nconst mapStore = \"mapStore\";\n\nexport default {\n  name: \"OfficeList\",\n  data() {\n    return {\n      offi: [],\n      detail: {\n        sidoname: \"\",\n        jeon: \"\",\n        wal: 0,\n        name: \"\",\n        dong: \"\",\n        jibun: \"\",\n        floor: \"\",\n        area: 0,\n        img: \"\",\n      },\n      check: false,\n      sidoname: \"\",\n    };\n  },\n  computed: {\n    ...mapState(mapStore, [\"sidos\", \"guguns\", \"dongs\", \"officetels\", \"house\"]),\n  },\n  methods: {\n    ...mapActions(mapStore, [\"setHouseDetail\"]),\n    ...mapMutations(mapStore, [\"SET_DETAIL_HOUSE\"]),\n    goDetail(o, imgnum) {\n      this.$emit(\"changeToggle1\", false);\n      this.detail.jeon = o.보증금;\n      this.detail.wal = o.월세;\n      this.detail.name = o.단지;\n      this.detail.dong = o.법정동;\n      this.detail.jibun = o.지번;\n      this.detail.floor = o.층;\n      this.detail.area = o.전용면적;\n      this.detail.sidoname = this.sidoname;\n      if (isNaN(imgnum)) this.detail.img = 0;\n      else this.detail.img = imgnum;\n      this.setHouseDetail(this.detail);\n    },\n    moveCenter(index) {\n      // 지역 코드 찾는 for문\n      for (let i = 0; i < 18; i++) {\n        if (String(this.offi[index].지역코드).substr(0, 2) == this.sidos[i].value) {\n          this.sidoname = this.sidos[i].text;\n          break;\n        }\n      }\n      let addr = this.sidoname + \" \" + this.offi[index].법정동 + \" \" + this.offi[index].지번;\n      console.log(\"선택된 주소\", addr);\n      this.$emit(\"addr\", addr);\n      this.$emit(\"flag\", true);\n    },\n    moveCenterOnly(index) {\n      // 지역 코드 찾는 for문\n      for (let i = 0; i < 18; i++) {\n        if (String(this.offi[index].지역코드).substr(0, 2) == this.sidos[i].value) {\n          this.sidoname = this.sidos[i].text;\n          break;\n        }\n      }\n      let addr = this.sidoname + \" \" + this.offi[index].법정동 + \" \" + this.offi[index].지번;\n      console.log(\"선택된 주소\", addr);\n      this.$emit(\"addr\", addr);\n      this.$emit(\"flag\", false);\n    },\n    isCheck() {\n      http\n        .post(`/like/getOne`, this.detail)\n        .then((response) => {\n          console.log(response);\n          console.log(\"getOne true\");\n          this.check = true;\n        })\n        .catch((error) => {\n          console.log(error);\n          console.log(\"getOne false\");\n          console.log(this.detail);\n          this.check = false;\n        });\n    },\n    clickDetail(o, index) {\n      this.moveCenterOnly(index);\n      this.goDetail(o, (index + 1) % 20);\n      this.isCheck();\n    },\n    setCheck(tf) {\n      this.check = tf;\n    },\n  },\n  watch: {\n    officetels() {\n      this.offi = this.officetels;\n      // console.log(\"offi\", this.offi);\n    },\n    house() {\n      this.detail = this.house;\n    },\n  },\n};\n</script>\n<style scoped></style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}