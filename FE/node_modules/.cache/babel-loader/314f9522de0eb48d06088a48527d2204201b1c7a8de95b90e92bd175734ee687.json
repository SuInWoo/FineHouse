{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { writeArticle } from \"@/api/board\";\nimport { mapState } from \"vuex\";\nconst memberStore = \"memberStore\";\nexport default {\n  name: \"BoardWrite\",\n  components: {},\n  data() {\n    return {\n      article: {\n        bno: 0,\n        writer: \"\",\n        title: \"\",\n        content: \"\"\n      }\n    };\n  },\n  computed: {\n    ...mapState(memberStore, [\"userInfo\"])\n  },\n  created() {\n    this.article.writer = \"admin\";\n  },\n  methods: {\n    onSubmit(event) {\n      event.preventDefault();\n      this.registArticle();\n    },\n    registArticle() {\n      writeArticle({\n        writer: \"admin\",\n        title: this.article.title,\n        content: this.article.content\n      }, response => {\n        console.log(response);\n        let msg = \"등록 처리시 문제가 발생했습니다.\";\n        if (response.status === 200) {\n          msg = \"등록이 완료되었습니다.\";\n          console.log(\"성공\");\n        }\n        alert(msg);\n        this.moveList();\n      }, error => {\n        console.log(error);\n      });\n    },\n    moveList() {\n      this.$router.push({\n        name: \"board\"\n      });\n    }\n  }\n};","map":{"version":3,"names":["writeArticle","mapState","memberStore","name","components","data","article","bno","writer","title","content","computed","created","methods","onSubmit","event","preventDefault","registArticle","response","console","log","msg","status","alert","moveList","error","$router","push"],"sources":["src/components/board/BoardWrite.vue"],"sourcesContent":["<template>\n  <b-container class=\"bv-example-row mt-5\">\n    <b-row class=\"mb-1\">\n      <b-col style=\"text-align: left\">\n        <!-- <b-form @submit=\"onSubmit\" @reset=\"onReset\"> -->\n        <b-form @submit=\"onSubmit\">\n          공지사항 작성 ( admin 용 )<br />\n          <!-- <b-form-group\n            id=\"userid-group\"\n            label=\"작성자:\"\n            label-for=\"writer\"\n            description=\"작성자를 입력하세요.\"\n          >\n            <b-form-input\n              id=\"writer\"\n              disabled\n              v-model=\"article.writer\"\n              type=\"text\"\n              required\n              placeholder=\"article.writer\"\n            ></b-form-input>\n          </b-form-group> -->\n\n          <b-form-group\n            id=\"subject-group\"\n            label=\"제목:\"\n            label-for=\"title\"\n            description=\"제목을 입력하세요.\"\n          >\n            <b-form-input\n              id=\"title\"\n              v-model=\"article.title\"\n              type=\"text\"\n              required\n              placeholder=\"제목 입력...\"\n            ></b-form-input>\n          </b-form-group>\n\n          <b-form-group id=\"content-group\" label=\"내용:\" label-for=\"content\">\n            <b-form-textarea\n              id=\"content\"\n              v-model=\"article.content\"\n              placeholder=\"내용 입력...\"\n              rows=\"10\"\n              max-rows=\"15\"\n            ></b-form-textarea>\n          </b-form-group>\n\n          <b-button type=\"submit\" variant=\"outline-primary\" class=\"m-1\">글작성</b-button>\n          <b-button type=\"reset\" class=\"m-1\">초기화</b-button>\n        </b-form>\n      </b-col>\n    </b-row>\n  </b-container>\n</template>\n\n<script>\nimport { writeArticle } from \"@/api/board\";\nimport { mapState } from \"vuex\";\n\nconst memberStore = \"memberStore\";\n\nexport default {\n  name: \"BoardWrite\",\n  components: {},\n  data() {\n    return {\n      article: {\n        bno: 0,\n        writer: \"\",\n        title: \"\",\n        content: \"\",\n      },\n    };\n  },\n  computed: {\n    ...mapState(memberStore, [\"userInfo\"]),\n  },\n  created() {\n    this.article.writer = \"admin\";\n  },\n  methods: {\n    onSubmit(event) {\n      event.preventDefault();\n      this.registArticle();\n    },\n    registArticle() {\n      writeArticle(\n        {\n          writer: \"admin\",\n          title: this.article.title,\n          content: this.article.content,\n        },\n        (response) => {\n          console.log(response);\n          let msg = \"등록 처리시 문제가 발생했습니다.\";\n          if (response.status === 200) {\n            msg = \"등록이 완료되었습니다.\";\n            console.log(\"성공\");\n          }\n          alert(msg);\n          this.moveList();\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n    },\n    moveList() {\n      this.$router.push({ name: \"board\" });\n    },\n  },\n};\n</script>\n\n<style scoped></style>\n"],"mappings":";AAyDA,SAAAA,YAAA;AACA,SAAAC,QAAA;AAEA,MAAAC,WAAA;AAEA;EACAC,IAAA;EACAC,UAAA;EACAC,KAAA;IACA;MACAC,OAAA;QACAC,GAAA;QACAC,MAAA;QACAC,KAAA;QACAC,OAAA;MACA;IACA;EACA;EACAC,QAAA;IACA,GAAAV,QAAA,CAAAC,WAAA;EACA;EACAU,QAAA;IACA,KAAAN,OAAA,CAAAE,MAAA;EACA;EACAK,OAAA;IACAC,SAAAC,KAAA;MACAA,KAAA,CAAAC,cAAA;MACA,KAAAC,aAAA;IACA;IACAA,cAAA;MACAjB,YAAA,CACA;QACAQ,MAAA;QACAC,KAAA,OAAAH,OAAA,CAAAG,KAAA;QACAC,OAAA,OAAAJ,OAAA,CAAAI;MACA,GACAQ,QAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,QAAA;QACA,IAAAG,GAAA;QACA,IAAAH,QAAA,CAAAI,MAAA;UACAD,GAAA;UACAF,OAAA,CAAAC,GAAA;QACA;QACAG,KAAA,CAAAF,GAAA;QACA,KAAAG,QAAA;MACA,GACAC,KAAA;QACAN,OAAA,CAAAC,GAAA,CAAAK,KAAA;MACA,CACA;IACA;IACAD,SAAA;MACA,KAAAE,OAAA,CAAAC,IAAA;QAAAxB,IAAA;MAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}